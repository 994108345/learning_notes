接口和类

接口和类的区别？
	类可以继承一个类或实现多个接口，也可以即继承一个类，又实现接口。
	接口可以实现多个接口，接口可以继承多个接口，接口不能继承类。
	接口不能定义变量，只能定义常量，且定义的常量会自动变成staic 和final修饰的。
	类不能实现类。
	
	
接口为什么不能继承？
	因为接口总只能有final 和static修饰的常量和方法。
	
	
接口和抽象类的区别
	首先抽象类是abstract修饰的，接口的interface
	抽象类中可以有抽象方法和普通方法，抽象方法必须有abstract关键字，且不能有实现。
	接口的所有类都不能有实现，但是在jdk1.8的时候有default关键字修饰的默认方法，可以有实现。
	
抽象类和类的却别
	抽象类的修饰符是abstract，类没有修饰符
	抽象类不能继承接口，可以实现接口。
	普通类可以继承解耦，可以实现接口。
	
	
继承、实现、依赖、关联、聚合、组合
	
	继承：子类继承父类的所有行为和信息
	
	实现：类重写接口的所有实现。
	
	依赖：A类中用到了B类，可以是偶然性的、临时性的、非常弱的。
		例如： A.user(B b);,作为一个方法参数
	
	关联：两个类之间是强依赖关系，不存在依赖的偶然性、关系也不是临时的、是长期的
		例如：在A类中存在成员变量 B b = new B();
		
	聚合：聚合的关联关系的一种特例。他体系的是整体与部分拥有的关系。是has-a的关系
		整体和部分的关系，例如计算机和cpu
		
	组合：组合也是关联关系的一种特例，体现的是包含contains-a的关系。这种关系比聚合强，也叫做强聚合，同样表现整体与部分的关系，但此时整体和部分是不能分离的，整体的生命周期也随着部分的声明周期结束而结束。比如人和人的大脑。
	
	关系的依赖程度“组合>聚合>关联>依赖
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	