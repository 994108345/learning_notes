装饰模式：动态地给一个对象添加一个额外的职责，就增加功能来说，装饰模式比生成子类更灵活。
装饰模式是利用一个方法来对对象进行包装。这样每个装饰对象的实现就和如何使用这个例子分离开了。每个装饰对象只关心自己的功能，不需要关心如何被添加到对象链当中。
装饰模式是为已有功能动态地添加更多功能的一种方式。
什么时候用：当系统需要新功能的时候，是向旧的类中添加新的代码。这些新加的代码通常装饰了原有类的核心职责或主要行为。它们在主类加入了的东西仅仅是为了满足一些只在某种特定情况下才会执行的特殊行为的需要。而装饰模式提供了一个非常好的方案。它把每个要装饰的功能放在单独的类中，并让这个类包装它所要装饰的对象。因此，当需要执行特殊行为时，客户代码就可以在运行时根本需要有选择的。按顺序的使用装饰功能包装对象。
装饰者的优点：
	把类中的装饰功能从类中搬移去除，这样可以简化原有的类
	有效的把类的核心职责和装饰工能区分开了。而且可以去除相关类中重复的装饰逻辑