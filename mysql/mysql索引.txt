二叉树：
	特点 :若它的左子树非空，则左子树上所有结点的值均小于等于X的值；
            若它的右子树非空，则右子树上所有结点的值均大于等于X的值；
	假如数据只是一直存在一边，深度不断加深，而广度没有加深，就失去了二叉树查找的意义。
平衡二叉树
	为了让深度不能无底线的增加，所以设计了平衡二叉树，规定最大的深度和最小深度只能相差1，如果超出，要通过旋转让深度差小于等于1.
	时间复杂度：O（log n）
红黑树
	特性:
		1. 每一个结点要么是红色，要么是黑色。

		2. 根结点是黑色的。

		3. 所有叶子结点都是黑色的（实际上都是Null指针，下图用NIL表示）。叶子结点不包含任何关键字信息，所有查询关键字都在非终结点上。

		4. 每个红色结点的两个子节点必须是黑色的。换句话说：从每个叶子到根的所有路径上不能有两个连续的红色结点

		5. 从任一结点到其每个叶子的所有路径都包含相同数目的黑色结点
		红黑树是每个节点都带颜色的树，节点颜色或是红色或是黑色，红黑树是一种查找树。红黑树有一个重要的性质，从根节点到叶子节点的最长的路径不多于最短的路径的长度的两倍。对于红黑树，插入，删除，查找的复杂度都是O（log N）。
		
	时间复杂度：O(log2(N))
		
B树
	B-tree（多路搜索树，并不是二叉的）是一种常见的数据结构。使用B-tree结构可以显著减少定位记录时所经历的中间过程，从而加快存取速度。按照翻译，B 通常认为是Balance的简称。这个数据结构一般用于数据库的索引，综合效率较高。
	
	B树的特征： 
		1. 根节点至少有两个孩子 
		2. 每个非根节点有[0 ,M]个孩； 
		3. 每个非根节点有[1,M-1]个关键字，并且以升序排列 
		4. key[i]和key[i+1]之间的孩子节点的值介于key[i]、key[i+1]之间 
		5. 所有的叶子节点都在同一层
		
		所有的结点都不能满，一满必须分裂，分裂时，中间的值提到上一级，
		所有的叶子都在一个级别
	
B+树
	